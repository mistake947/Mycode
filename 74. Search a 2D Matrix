Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:

https://leetcode.com/problems/search-a-2d-matrix/

Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int tar) {
        
        int n=matrix.size();
        int m=matrix[0].size();
        int i=0;
        int j=m-1;
        while(i>=0 and i<n and j>=0 and j<m )
        {
           if(matrix[i][j]==tar) return true;
            else if(matrix[i][j]>tar) j--;
            else if(matrix[i][j]<tar)i++;
        }
        return false;
        
    }
};
